#
# Copyright:: Copyright (c) 2018 Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cli:
  telemetry_enabled: |
    Telemetry has been enabled by default for this beta release
    of chef-run. The anonymous data we gather is used to
    determine how we can impove your chef-run experience.

    To disable it, add the following entry to
    %1:

    [telemetry]
    enable=false

    For more information about what we data gather and additional opt-out
    options, visit https://chef.sh/docs/chef-workstation/privacy/

  description: |
    Chef Run is a tool to execute ad-hoc tasks using Chef.
  creating_config: "Creating config file in %1."
  default_config_location: "Location of config file. Default: %1"
  identity_file: "SSH identity file to use when connecting. Keys loaded into ssh-agent will also be used."
  ssl:
    desc: "Use SSL for WinRM. Current default: %1"
    verify_desc: |
      Verify peer certificate when using SSL for WinRM
      Use --ssl-no-verify when using SSL for WinRM and
      the remote host is using a self-signed certificate.
      Current default: %1
  cookbook_repo_paths: "Comma separated list of cookbook repository paths."
  install_description: |
    Install Chef client on the target host(s) if it is not installed.
    This defaults to enabled - the installation will be performed
    if there is no Chef client on the target(s).
  user_description: |
    Username to use for authentication to the target(s). The same
    username will be used for all targets.
  password_description: |
    Password to use for authentication to the target(s). The same
    password will be used for all targets.
  protocol_description: |
    The protocol to use for connecting to targets.
    The default is '%2', and it can be changed in config.toml by
    setting 'connection.default_protocol' to a supported option.
  sudo:
    flag_description:
      sudo: "Whether to use root permissions on the target. Default: true"
      command: "Command to use for administrative/root access. Defaults to 'sudo'."
      options: |
        Options to use with the sudo command. If there are multiple flags,
        quote them. For example: --sudo-options '-H -P -s'
      password: |
        Password to use with the sudo command.  This must be provided if
        password is required for sudo on the target(s). The same sudo password
        will be used for all targets.
  help:
    description: Show help and usage for `chef-run`
  usage: |
    chef-run <TARGET[S]> <RESOURCE> <RESOURCE_NAME> [PROPERTIES] [FLAGS]
    chef-run <TARGET[S]> <RECIPE> [FLAGS]

  usage_full: |
    chef-run <TARGET[S]> <RESOURCE> <RESOURCE_NAME> [PROPERTIES] [FLAGS]

      Runs a single <RESOURCE> on the specified <TARGET[S]>.
      [PROPERTIES] should be specified as key=value.

      For example:

        chef-run web01 service nginx action=restart
        chef-run web01,web02 service nginx action=restart
        chef-run web0[1:2] service nginx action=restart

    chef-run <TARGET[S]> <RECIPE> [FLAGS]

      Runs a single recipe located at <RECIPE> on the specified <TARGET[S]>.

      For example:

        chef-run web01 path/to/cookbook/recipe.rb
        chef-run web01,web02 path/to/cookbook
        chef-run web0[1:2] cookbook_name
        chef-run web01 cookbook_name::recipe_name

    ARGUMENTS:
      <TARGET[S]>       The hosts or IPs to target. Can also be an SSH or WinRM URLs
                        in the form:

                        ssh://[USERNAME]@example.com[:PORT]
      <RESOURCE>        A Chef resource, such as 'user' or 'package'
      <RESOURCE_NAME>   The name, usually used to specify what 'thing' to set up with
                        the resource. For example, given resource 'user', 'name' would be
                        the name of the user you wanted to create.
      <RECIPE>          The recipe to converge. This can be provided as one of:
                        1. Full path to a recipe file
                        2. Cookbook name. First we check the working directory for this
                           cookbook, then we check in the chef repository path. If a
                           cookbook is found we run the default recipe.
                        3. This behaves similarly to 'cookbook name' above, but it also allows
                           you to specify which recipe to use from the cookbook.
  error:
    bad_config_file: |

      The path '%1' is not a valid file, or it cannot be read.

      Please verify that the path is correct, and that permissions
      on the file allow it to be read by your user account.

    missing_config_path: |

      Missing configuration file.

      Please provide the path to a valid chef-run configuration file
      as an argument to --config-path. For example:

        --config-path /home/user1/.chef-workstation/config.toml

    invalid_config_key: |

      Invalid configuration entry.

      When loading '%2',
      the configuration entry '%1' was not recognized.

      Please check the spelling and ensure that the value is correct.

    unknown_config_error: |

      Error in configuration file.

      When loading '%2',
      the following error occurred:
        %1

      Please verify that the configuration file is correct. If the
      problem continues, contact workstation@chef.io for further assistance.

    unsupported_installation: |

      Use of chef-run within ChefDK is not supported.

      Chef Workstation is the successor to the ChefDK, and contains the
      same components including a supported chef-run.

      Download the latest here:

      https://downloads.chef.io/chef-workstation/stable

  version:
    description: Show the current version of Chef Run.
    show: "chef-run: %1"
  status:
    connecting: "Connecting as %1..."
    connected: "Connected."
    connection_failed: "Connection failed: %1"

status:
  generate_temp_cookbook:
    generating: Packaging cookbook...
    success: Packaging cookbook... done!
  generate_local_policy:
    generating: Generating local policyfile...
    exporting:  Generating local policyfile... exporting...
    success: Generating local policyfile... exporting... done!
  install_chef:
    checking_for_client: Checking for Chef client.
    verifying: Verifying Chef client installation.
    downloading: Downloading Chef client installer into local cache.
    uploading: Uploading Chef client installer to target.
    installing: Installing Chef client version %1.
    upgrading: Upgrading Chef client from version %1 to %2.
    already_present: Chef client version %1 already installed on target.
    install_success: Successfully installed Chef client version %1
    upgrade_success: Successfully upgraded Chef client from version %1 to %2.
    failure: "An error occurred while installing Chef client: %1"
  converge:
    header: !!pl
      1: Applying %2 from %3 to target.
      n: Applying %2 from %3 to targets.
    converging: Applying %1...
    creating_local_policy: Creating local policy...
    creating_remote_policy: Pushing remote policy to target...
    uploading_trusted_certs: Uploading local trusted certs to target...
    success: "Successfully converged %1."
    failure: "Failed to converge %1."
    reboot: "Reboot scheduled on target."
